string[] hahahaha() {
println(toString(MyHaHa(magic()[3])[0][0].ord(1)));
    for(;;);
    return new string[];
}


RedBoy[][][] boyss = new RedBoy[1][2][3];
RedBoy[][][] boyss1 = boyss;
RedBoy[][][] boyss2 = boyss1 = boyss;
int shenmegui =  boyss[1][2][3].num;
Mo haha = new Mo;

void made() {
    print("youdu");
    print("??");
}

//class delc
class Mo{
	int ang;
	int sec;
	string world;
}

class RedBoy{
    int ang;
	int num;
}

//global delc
bool tt = false;
int age = 100;
string eng = "Four score and seven years ago";

void journalists(string location){
    Mo mo;
    mo.ang = 1;
    RedBoy redd;
    redd.ang = mo.ang = 1;
	"too".length();
	if (location == "HongKong"){
		print("naive!\n");
		print("fast!\n");
		println("too young\\too simple.");
	}
}

Mo xu(Mo m0, RedBoy boys){
	int i;
	for (i = 0; i < boys.num; ++i){
		m0.sec++;
	}
	return m0;
}

int main(){

    int kkk;
    int jjj;
    kkk = jjj = 2 + 1;

	//test initialization
	int a;
	int b;
	//int i = "sdfsdf";
	int c = 1;
	int year = 2016;
	string tell = "wukefengggao\n";;
	Mo tellnoo = null;
	bool zici = true;
	bool nozici = false;
	RedBoy boy = new RedBoy;//default initializer is "()"-free
	RedBoy[] boys = new RedBoy[3];
	RedBoy[][][] boyss = new RedBoy[1][2][3];
	Mo haha = new Mo;

	//test for constant
	false;
	true;
	null;
	123;
	"Four score and seven years ago\n\\\"";

	//test for opeartion
	a = 1;
	b = 2;
	a = b = c;//be aware of the right association

	a + b;
	a - b;
	a * b;
	a / b;
	a % b;
	a < 1;
	a > 2;
	a == b;
	a != b;
	a <= b;
	a >= b;

	a & b;
	a | b;
	!false;

	a << 1;
	a >> 2;
	~a;
	a | b;
	a ^ b;
	a & b;

	++a;
	~b++;
		//(++a)++;

	boy.num;

	boys[2].num;
	boyss[1][2][3].num;

	xu(new Mo, boy);
	//test for iteration
	int i = 0;
	{string j = "string";}

	for (i = 0; i < 3; ++i){
		xu(haha, boys[i]);
	}

	for (i = 0; i < 3; ++i) xu(haha, boys[i]);
	for (;;);
	i = 0;
	while(i < year) print(toString(i));
	while(true) ;

	//test for if
	if (i < year) {
		print(toString(travel()));
	}
	else if (i == year) {
		print("naive!\n");
	}

	if (i < year) print(toString(travel()));
	else if (i == year) print("naive!\n");
	else print("too young!\\");

	i = 0;
	while(true){
		if (i == year) break;
		++i;
	}

	i = 0;
	while(true){
		if (i < year) {
			++i;
			continue;
		}
		break;
	}

	//some inherent function
	print(toString(boys.size()));
	print(toString("asdqwe".length()));
	print("asdqwe".substring(1,2).substring(i,i));
	magic().size();
	println(toString(magic().size()));
	magic().size();
	RedBoy[][] youqu;
	youqu = magic()[3];
    int hahasize = MyHaHa(magic()[3]).size();
    println(toString(MyHaHa(magic()[3])[i][0].ord(1)));
	return 0;
}

//function delc
int travel(){
	int a = 10000000;
	return a;
}

RedBoy[][][] magic() {
    RedBoy[][][] ummmm;
    return ummmm;
}

string[][] MyHaHa(RedBoy[][] youqu) {

    int i = 0;
    int j = i;
    int k = j = i = 1;
    for (; i < 10; ++i) {
        for (;;) {
            break;
        }
        continue;
    }
    while (true) {
        break;
    }
    string naive = "ZM";
    string [][] excited = null;
    excited = new string[4][];
    excited[1] = new string[2];
    excited[0][0] = "J" + naive;
    return excited;
}

